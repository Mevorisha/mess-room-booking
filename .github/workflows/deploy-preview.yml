# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools
name: Deploy to Preview
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  pull_request:
    types: []
  workflow_dispatch:
permissions:
  checks: write
  contents: read
  pull-requests: write
jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy Backend
        working-directory: backend
        run: |
          npm ci
          npm install -g vercel
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} 2> ../vercel-deploy.log

      - name: Set API Server URL
        run: |
          API_SERVER_URL="$(grep -Eo 'https://.*\.vercel\.app' vercel-deploy.log | head -1)"
          echo "export default \"$API_SERVER_URL\";" > app/src/configs/API_SERVER_URL.ts

      - name: Install Dependencies
        working-directory: app
        run: |
          npm ci

      - name: Build
        working-directory: app
        run: |
          echo Backend API at "$(grep -Eo 'https://.*\.vercel\.app' src/configs/API_SERVER_URL.ts | head -1)"
          npm run build

      - name: Obfuscate
        working-directory: firebase
        run: |
          npm install -g javascript-obfuscator
          javascript-obfuscator build --output build

      - name: Deploy Frontend
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId: ${{ github.event.number }}
          expires: 1d
          projectId: mess-booking-app-serverless
          entryPoint: ./firebase
      # - name: Comment Preview URL on PR
      #   run: |
      #     echo "Preview URL: ${{ steps.deploy.outputs.details_url }}"
      #     curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
      #       -d '{"body": "ðŸ”¥ Preview URL: '${{ steps.deploy.outputs.details_url }}'"}' \
      #       "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments"
